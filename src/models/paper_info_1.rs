/*
 * Academic Graph API
 *
 * Fetch paper and author data from the Semantic Scholar Academic Graph (S2AG)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PaperInfo1 {
    #[serde(rename = "paperId")]
    pub paper_id: String,
    /// URL on the Semantic Scholar website
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    #[serde(rename = "venue", skip_serializing_if = "Option::is_none")]
    pub venue: Option<String>,
    #[serde(rename = "year", skip_serializing_if = "Option::is_none")]
    pub year: Option<i32>,
    #[serde(rename = "authors", skip_serializing_if = "Option::is_none")]
    pub authors: Option<Vec<crate::models::AuthorInfo1>>,
}

impl PaperInfo1 {
    pub fn new(paper_id: String) -> PaperInfo1 {
        PaperInfo1 {
            paper_id,
            url: None,
            title: None,
            venue: None,
            year: None,
            authors: None,
        }
    }
}


